/**
 * üí¨ useConfirmDialog - –ö–æ–º–ø–æ–∑–∞–±–ª –¥–ª—è –¥–∏–∞–ª–æ–≥–æ–≤ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
 * 
 * –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–æ–∫–∞–∑–∞ –¥–∏–∞–ª–æ–≥–æ–≤ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
 * –≤–º–µ—Å—Ç–æ –Ω–∞—Ç–∏–≤–Ω—ã—Ö confirm() –¥–∏–∞–ª–æ–≥–æ–≤ –±—Ä–∞—É–∑–µ—Ä–∞.
 * 
 * @example
 * ```typescript
 * const { confirm } = useConfirmDialog()
 * 
 * const result = await confirm({
 *     title: '–£–¥–∞–ª–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ?',
 *     message: '–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å',
 *     confirmText: '–£–¥–∞–ª–∏—Ç—å',
 *     cancelText: '–û—Ç–º–µ–Ω–∞'
 * })
 * 
 * if (result) {
 *     // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª
 * }
 * ```
 */

import { ref } from 'vue'

interface ConfirmOptions {
    title: string
    message: string
    confirmText?: string
    cancelText?: string
    type?: 'default' | 'danger' | 'warning'
}

interface ConfirmState {
    isOpen: boolean
    options: ConfirmOptions | null
    resolve: ((value: boolean) => void) | null
}

const state = ref<ConfirmState>({
    isOpen: false,
    options: null,
    resolve: null
})

export function useConfirmDialog() {
    // –ü–æ–∫–∞–∑–∞—Ç—å –¥–∏–∞–ª–æ–≥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è (–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–≥–ª—É—à–∫–∞ —Å –Ω–∞—Ç–∏–≤–Ω—ã–º confirm)
    const confirm = (options: ConfirmOptions): Promise<boolean> => {
        return new Promise((resolve) => {
            // –í—Ä–µ–º–µ–Ω–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—Ç–∏–≤–Ω—ã–π confirm, –ø–æ–∫–∞ –Ω–µ —Å–æ–∑–¥–∞–¥–∏–º –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π UI
            const message = `${options.title}\n\n${options.message}`
            const result = window.confirm(message)
            resolve(result)
        })
    }

    // –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ
    const handleConfirm = () => {
        if (state.value.resolve) {
            state.value.resolve(true)
        }
        closeDialog()
    }

    // –û—Ç–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ
    const handleCancel = () => {
        if (state.value.resolve) {
            state.value.resolve(false)
        }
        closeDialog()
    }

    // –ó–∞–∫—Ä—ã—Ç—å –¥–∏–∞–ª–æ–≥
    const closeDialog = () => {
        state.value = {
            isOpen: false,
            options: null,
            resolve: null
        }
    }

    return {
        // –°–æ—Å—Ç–æ—è–Ω–∏–µ
        confirmState: state,

        // –ú–µ—Ç–æ–¥—ã
        confirm,
        handleConfirm,
        handleCancel,
        closeDialog
    }
}
