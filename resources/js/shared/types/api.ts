/**
 * üîó API Types - –¢–∏–ø—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API
 * 
 * –û–±—â–∏–µ —Ç–∏–ø—ã –¥–ª—è —É–Ω–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã —Å API –æ—Ç–≤–µ—Ç–∞–º–∏,
 * –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π –∏ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫.
 */

// –ë–∞–∑–æ–≤—ã–π –æ—Ç–≤–µ—Ç API
export interface ApiResponse<T = any> {
    status: 'success' | 'error'
    message?: string
    data: T
}

// –ü–∞–≥–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
export interface PaginatedResponse<T> {
    data: T[]
    meta: {
        current_page: number
        last_page: number
        per_page: number
        total: number
        from: number | null
        to: number | null
        path: string
    }
    links: {
        first: string
        last: string
        prev: string | null
        next: string | null
    }
}

// –û–ø—Ü–∏—è –¥–ª—è select/enum
export interface EnumOption {
    value: string
    label: string
    description?: string
    color?: string
}

// –û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
export interface ValidationErrors {
    [field: string]: string[]
}

// –û—à–∏–±–∫–∏ API
export interface ApiError {
    message: string
    errors?: ValidationErrors
    status?: number
}

// –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
export interface LoadingState {
    loading: boolean
    error: string | null
}

// –§–∏–ª—å—Ç—Ä—ã —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
export interface FilterParams {
    page?: number
    per_page?: number
    sort?: string
    sort_direction?: 'asc' | 'desc'
    [key: string]: any
}

// –ú–µ—Ç–∞-–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º
export interface FormMeta {
    processing: boolean
    errors: ValidationErrors
    recentlySuccessful: boolean
    isDirty: boolean
}
